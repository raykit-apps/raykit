{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "ExtensionManifest",
  "type": "object",
  "properties": {
    "activationEvents": {
      "description": "An array of the activation events for this extension.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "categories": {
      "description": "The categories you want to use for the extensions.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "contributes": {
      "description": "An object describing the extension's contributions.",
      "$ref": "#/$defs/ContributesManifest"
    },
    "dependencies": {
      "description": "Any runtime Node.js dependencies your extensions needs. Exactly the same as npm's dependencies.",
      "type": [
        "object",
        "null"
      ],
      "additionalProperties": {
        "$ref": "#/$defs/SemVer"
      }
    },
    "description": {
      "description": "A short description of what your extension is and does.",
      "type": "string"
    },
    "devDependencies": {
      "description": "Any development Node.js dependencies your extension needs. Exactly the same as npm's devDependencies.",
      "type": [
        "object",
        "null"
      ],
      "additionalProperties": {
        "$ref": "#/$defs/SemVer"
      }
    },
    "displayName": {
      "description": "The display name for the extension used in the Marketplace.\nThe display name must be unique to the Marketplace.",
      "type": "string"
    },
    "engines": {
      "description": "An object containing at least the Raykit key matching the versions of Raykit that the extension is compatible with.\nCannot be *. For\n## Example\n^0.10.5 indicates compatibility with a minimum Raykit version of 0.10.5.",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/$defs/SemVer"
      }
    },
    "extensionDependencies": {
      "description": "An array with the ids of extensions that this extension depends on.\nThe id of an extension is always ${publisher}.${name}.\n## example\nraykit.raykit-clipboard",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": "string"
      }
    },
    "extensionPack": {
      "description": "An array with the ids of extensions that can be installed together.\nThe id of an extension is always ${publisher}.${name}.\n## example\nraykit.raykit-clipboard",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": "string"
      }
    },
    "icon": {
      "title": "Icon Path",
      "description": "Path to a 128x128px (or larger) icon for the extension.",
      "type": "string"
    },
    "keywords": {
      "description": "An array of keywords to make it easier to find the extension.\nThese are included with other extension Tags on the Marketplace.\nThis list is currently limited to 30 keywords.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": "string"
      }
    },
    "license": {
      "description": "Refer to npm's documentation.\nIf you do have a LICENSE file in the root of your extension, the value for license should be \"SEE LICENSE IN <filename>\".",
      "type": [
        "string",
        "null"
      ]
    },
    "main": {
      "description": "The entry point to your extension.",
      "type": "string"
    },
    "name": {
      "title": "Extension Name",
      "description": "Unique identifier for the extension (e.g., 'raykit-clipboard').",
      "type": "string",
      "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
    },
    "platform": {
      "title": "Compatible Platforms",
      "description": "A list of platforms the extension is compatible with. If omitted, it is assumed to be compatible with all.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "#/$defs/Platform"
      }
    },
    "publisher": {
      "title": "Publisher ID",
      "description": "The unique identifier of the publisher. Must be all lowercase and contain only letters and numbers.",
      "type": "string",
      "pattern": "^[a-z0-9]+$"
    },
    "version": {
      "title": "Extension Version",
      "description": "SemVer compatible version.",
      "$ref": "#/$defs/SemVer"
    }
  },
  "required": [
    "name",
    "version",
    "publisher",
    "engines",
    "displayName",
    "description",
    "categories",
    "main",
    "contributes",
    "activationEvents",
    "icon"
  ],
  "$defs": {
    "CommandManifest": {
      "description": "Represents a command definition for registration.\n\n## Example\n\n{\n  \"command\": \"open.url\",\n  \"title\": \"Open URL\",\n  \"description\": \"通过默认浏览器打开链接\",\n}",
      "type": "object",
      "properties": {
        "command": {
          "title": "Command ID",
          "description": "Unique identifier for the command.",
          "type": "string",
          "maxLength": 255,
          "minLength": 2,
          "pattern": "^[a-z0-9-~][a-zA-Z0-9-._~]*$"
        },
        "description": {
          "title": "The command's description",
          "description": "It helps users understand what the command does. This information will be displayed in the preferences.",
          "type": "string",
          "maxLength": 2048,
          "minLength": 12
        },
        "disabledByDefault": {
          "title": "Whether the command is disabled by default",
          "description": "Whether the command is disabled by default.\n/// Defaults to `false`.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "icon": {
          "title": "The command's icon",
          "description": "It is recommended to use SVG for icons.\nIf PNG or JPG is needed, the minimum size should be 512x512 pixels.\nThe icon will be displayed in \"Preferences\" and \"Raykit Root Directory Search\".\nIf there is no icon for this command, it will inherit the icon of the extension.\nPlease note that icons support dark and light themes. For example, set this property to \"icon.png\" and place two files \"icon@light.png\" and \"icon@dark.png\" in the resource folder.",
          "type": [
            "string",
            "null"
          ],
          "pattern": "\\.(png|svg|jpg)$"
        },
        "subtitle": {
          "title": "Additional command descriptor",
          "description": "Supplemental text for the command.\nDisplayed in root search results (optional).",
          "type": [
            "string",
            "null"
          ],
          "maxLength": 255,
          "minLength": 2
        },
        "title": {
          "title": "The human-friendly command's name",
          "description": "Display name of the command.\nShown in user preferences and Raykit's root search interface.",
          "type": "string",
          "maxLength": 255,
          "minLength": 2
        }
      },
      "required": [
        "command",
        "title",
        "description"
      ]
    },
    "CommandPaletteManifest": {
      "description": "command search palette\n## Example\n{\n  \"contributes\": {\n    \"palettes\": [\n      {\n        \"command\": \"myExtension.sayHello\",\n      }\n    ]\n  }\n}",
      "type": "object",
      "properties": {
        "command": {
          "title": "The command's identifier",
          "description": "Unique identifier of the command triggered by this palette",
          "type": "string",
          "maxLength": 255,
          "minLength": 2,
          "pattern": "^[a-z0-9-~][a-zA-Z0-9-._~]*$"
        },
        "icon": {
          "title": "The command's icon",
          "description": "It is recommended to use SVG for icons.\nIf PNG or JPG is needed, the minimum size should be 512x512 pixels.\nThe icon will be displayed in \"Raykit Root Directory Search\".\nIf no icon is specified, it will inherit the icon name of the command.\nPlease note that icons support dark and light themes. For example, set this property to \"icon.png\" and place two files \"icon@light.png\" and \"icon@dark.png\" in the resource folder.",
          "type": [
            "string",
            "null"
          ],
          "pattern": "\\.(png|svg|jpg)$"
        },
        "lens": {
          "title": "The human-friendly command's name",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0
          },
          "maxItems": 2,
          "minItems": 2
        },
        "subtitle": {
          "title": "Additional command descriptor",
          "description": "Supplemental text for the command.\nDisplayed in root search results (optional).\nIf no subtitle is specified, it will inherit the subtitle name of the command.",
          "type": [
            "string",
            "null"
          ],
          "maxLength": 255,
          "minLength": 2
        },
        "title": {
          "title": "The human-friendly command's name",
          "description": "Display name of the command.\nShown in Raykit's root search interface.\nIf no title is specified, it will inherit the title name of the command.",
          "type": [
            "string",
            "null"
          ],
          "maxLength": 255,
          "minLength": 2
        },
        "when": {
          "title": "Match the character limit",
          "description": "Match the character limit",
          "type": "string"
        }
      },
      "required": [
        "command",
        "when"
      ]
    },
    "ContributesManifest": {
      "type": "object",
      "properties": {
        "commandPalettes": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/$defs/CommandPaletteManifest"
          }
        },
        "commands": {
          "title": "Executable extension's commands",
          "description": "List of all commands vended by this extensions.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/$defs/CommandManifest"
          },
          "maxItems": 100
        },
        "keybindings": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/$defs/KeybindingManifest"
          }
        },
        "preferences": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/$defs/PreferenceManifest"
          }
        },
        "views": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/$defs/ViewManifest"
          }
        }
      }
    },
    "KeybindingManifest": {
      "description": "Shortcut key binding\n# Example\n```json\n{\n  \"command\": \"open.settings\",\n  \"key\": \"ctrl+p\",\n  // macOS-specific keyboard shortcuts\n  \"mac\": \"cmd+p\",\n}\n```",
      "type": "object",
      "properties": {
        "command": {
          "title": "The command's identifier",
          "description": "Unique identifier of the command triggered by this keybinding",
          "type": "string",
          "maxLength": 255,
          "minLength": 2,
          "pattern": "^[a-z0-9-~][a-zA-Z0-9-._~]*$"
        },
        "global": {
          "title": "Global Scope",
          "description": "Determines if shortcut works system-wide (true) or only in active window (false)\nIf not specified, the keyboard shortcut will be triggered in the current window.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "key": {
          "title": "Default Keybinding",
          "description": "The shortcut key, If there is a conflict with the previous shortcut key, the latter one separated by a space will be used as a replacement.\n## Example\n\"ctrl+p\"\n\"ctrl+p shift+p\"",
          "type": "string",
          "maxLength": 255,
          "minLength": 1,
          "pattern": "^[a-z0-9-~][a-zA-Z0-9-._~]*$"
        },
        "linux": {
          "title": "Linux Keybinding",
          "description": "Overrides default keybinding on Linux systems",
          "type": [
            "string",
            "null"
          ],
          "maxLength": 255,
          "minLength": 1,
          "pattern": "^[a-z0-9-~][a-zA-Z0-9-._~]*$"
        },
        "mac": {
          "title": "macOS Keybinding",
          "description": "Overrides default keybinding on macOS systems",
          "type": [
            "string",
            "null"
          ],
          "maxLength": 255,
          "minLength": 1,
          "pattern": "^[a-z0-9-~][a-zA-Z0-9-._~]*$"
        },
        "when": {
          "title": "Activation Condition",
          "description": "Boolean expression controlling when the keybinding is active",
          "type": [
            "string",
            "null"
          ],
          "maxLength": 255,
          "minLength": 2
        },
        "windows": {
          "title": "Windows Keybinding",
          "description": "Overrides default keybinding on Windows systems",
          "type": [
            "string",
            "null"
          ],
          "maxLength": 255,
          "minLength": 1,
          "pattern": "^[a-z0-9-~][a-zA-Z0-9-._~]*$"
        }
      },
      "required": [
        "command",
        "key"
      ]
    },
    "Platform": {
      "description": "Represents a compatible operating system platform.",
      "type": "string",
      "enum": [
        "windows",
        "macos",
        "linux"
      ]
    },
    "PreferenceManifest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "title"
      ]
    },
    "SemVer": {
      "type": "string",
      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
    },
    "ViewManifest": {
      "type": "object",
      "properties": {
        "command": {
          "type": [
            "string",
            "null"
          ]
        },
        "icon": {
          "type": [
            "string",
            "null"
          ]
        },
        "label": {
          "type": "string"
        },
        "title": {
          "type": [
            "string",
            "null"
          ]
        },
        "tools": {
          "type": [
            "boolean",
            "null"
          ]
        },
        "url": {
          "type": [
            "boolean",
            "null"
          ]
        },
        "window": {
          "anyOf": [
            {
              "$ref": "#/$defs/Window"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "label"
      ]
    },
    "Window": {
      "type": "object"
    }
  }
}